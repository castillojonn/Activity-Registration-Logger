{"version":3,"sources":["meteor://ðŸ’»app/imports/api/attendance/server/publications.js","meteor://ðŸ’»app/imports/api/attendance/attendance.js","meteor://ðŸ’»app/imports/api/attendance/methods.js","meteor://ðŸ’»app/imports/api/events/server/publications.js","meteor://ðŸ’»app/imports/api/events/methods.js","meteor://ðŸ’»app/imports/startup/server/globals.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/server/security.js","meteor://ðŸ’»app/server/main.js"],"names":["Meteor","module","watch","require","v","Attendance","publish","userId","ready","find","export","Mongo","SimpleSchema","Collection","deny","insert","update","remove","schema","type","String","eventId","attachSchema","publicFields","insertAttendance","deleteAttendance","ValidatedMethod","getSingleEvent","name","validate","validator","run","ev","call","at","_","HTTP","CALENDAR_ID","self","publishedKeys","_user","users","findOne","services","google","options","headers","Authorization","accessToken","Exception","url","response","get","each","data","items","item","id","changed","added","error","console","log","respone"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Attendance } from '../attendance';\n\nMeteor.publish('user.attendance', function () {\n    if (!this.userId) {\n        return this.ready();\n    }\n\n    return Attendance.find({\n        userId: this.userId,\n    });\n});\n","import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\nexport const Attendance = new Mongo.Collection('attendance');\n\n// deny client side updates\nAttendance.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\n// schema\nAttendance.schema = new SimpleSchema({\n    userId: {\n        type: String,\n    },\n    eventId: {\n        type: String,\n    },\n});\nAttendance.attachSchema(Attendance.schema);\n\n// expose public fields\n// ** sh 112117 - maybe this shouldn't be public ??\nAttendance.publicFields = {\n    userId: 1,\n    eventId: 1,\n};\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\n\nimport { Attendance } from './attendance';\nimport { getSingleEvent } from '../attendance/methods';\n\nexport const insertAttendance = new ValidatedMethod({\n    name: 'Attendance.methods.insert',\n\n    validate: new SimpleSchema({\n        eventId: { type: String },\n    }).validator(),\n\n    run({ eventId }) { \n        const ev = getSingleEvent.call(eventId);\n        if (ev) {\n            const at = {\n                userId: this.userId,\n                eventId: eventId,\n            };\n            Attendance.insert(at);\n        }\n    },\n});\n\nexport const deleteAttendance = new ValidatedMethod({\n    name: 'Attendance.methods.delete',\n\n    validate: new SimpleSchema({\n        eventId: { type: String },\n    }).validator(),\n\n    run({ userId, eventId }) {\n        Attendance.remove({\n            userId: this.userId,\n            eventId: eventId,\n        });\n    },\n});\n","import { Meteor } from 'meteor/meteor';\nimport { _ } from 'meteor/underscore';\nimport { HTTP } from 'meteor/http';\n\nimport { CALENDAR_ID } from '../../../startup/server/globals';\n\nMeteor.publish('events', function () {\n    var self = this;\n    var publishedKeys = {};\n\n    try {\n        const _user = Meteor.users.findOne(this.userId);\n\n        if (_user && _user.services && _user.services.google) {\n            var options = {};\n            options.headers = {};\n            options.headers.Authorization = 'Bearer ' + _user.services.google.accessToken;\n        } else {\n            throw new Exception(\"User's google access token not found\");\n        }\n\n        var options = {\n            'headers' : {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + _user.services.google.accessToken,\n                'X-JavaScript-User-Agent': \"Google APIs Explorer\"\n            }\n        };\n\n        var url = 'https://www.googleapis.com/calendar/v3/calendars/'+ CALENDAR_ID +'/events';\n        var response = HTTP.get(url, options);\n\n        _.each(response.data.items, function(item) {\n            if (publishedKeys[item.id]) {\n                self.changed('events', item.id, item);\n            } else {\n                publishedKeys[item.id] = true;\n                self.added('events', item.id, item);\n            }\n        });\n\n        self.ready();\n\n    } catch (error) {\n        console.log(error);\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\n\nimport { CALENDAR_ID } from '../../startup/server/globals';\n\nexport const getSingleEvent = new ValidatedMethod({\n    name: 'Events.methods.getSingle',\n\n    validate: new SimpleSchema({\n        eventId: { type: String },\n    }).validator(),\n\n    run({ eventId }) {\n        try {\n            const _user = Meteor.users.findOne(this.userId);\n\n            if (_user && _user.services && _user.services.google) {\n                var options = {};\n                options.headers = {};\n                options.headers.Authorization = 'Bearer ' + _user.services.google.accessToken;\n            } else {\n                throw new Exception(\"User's google access token not found\");\n            }\n\n            var options = {\n                'headers' : {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + _user.services.google.accessToken,\n                    'X-JavaScript-User-Agent': \"Google APIs Explorer\"\n                }\n            };\n\n            var url = 'https://www.googleapis.com/calendar/v3/calendars/'+ CALENDAR_ID +'/events/'+ eventId;\n            var response = HTTP.get(url, options);\n\n            if (response.data.error) {\n                throw new Exception('Error calling for event, event does not exist');\n            } else {\n                return respone.data;\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    },\n});\n","export const CALENDAR_ID = 'capstone.reg.log@gmail.com';\n","// define collections, publications, and methods that the\n// app provides as API to client\nimport './register-api';\n\n// define a starting set of data if app is loaded with an empty db\nimport './fixtures';\n\n// register security\nimport './security';\n","// events\nimport '../../api/events/methods';\nimport '../../api/events/server/publications';\n\n// attendance\nimport '../../api/attendance/methods';\nimport '../../api/attendance/server/publications';\n","import { Meteor } from 'meteor/meteor';\n\n// deny all updates to users' profiles\nMeteor.users.deny({ update: () => true });\n","import '/imports/startup/server';\n"]}